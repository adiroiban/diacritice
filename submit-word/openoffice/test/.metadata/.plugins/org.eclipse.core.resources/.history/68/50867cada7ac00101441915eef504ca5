package org.openoffice.helloworld.comp;

import com.sun.star.uno.XComponentContext;
import com.sun.star.lib.uno.helper.Factory;
import com.sun.star.lang.XSingleComponentFactory;
import com.sun.star.registry.XRegistryKey;
import com.sun.star.lib.uno.helper.WeakBase;


public final class HelloworldImpl extends WeakBase
   implements org.openoffice.helloworld.XHelloworld,
              com.sun.star.lang.XServiceInfo
{
    private final XComponentContext m_xContext;
    private static final String m_implementationName = HelloworldImpl.class.getName();
    private static final String[] m_serviceNames = {
        "org.openoffice.helloworld.Helloworld" };


    public HelloworldImpl( XComponentContext context )
    {
        m_xContext = context;
    };

    public static XSingleComponentFactory __getComponentFactory( String sImplementationName ) {
        XSingleComponentFactory xFactory = null;

        if ( sImplementationName.equals( m_implementationName ) )
            xFactory = Factory.createComponentFactory(HelloworldImpl.class, m_serviceNames);
        return xFactory;
    }

    public static boolean __writeRegistryServiceInfo( XRegistryKey xRegistryKey ) {
        return Factory.writeRegistryServiceInfo(m_implementationName,
                                                m_serviceNames,
                                                xRegistryKey);
    }

    // org.openoffice.helloworld.XHelloworld:
    public String getLadyName()
    {
        return new String();
    }

    public void setLadyName(String the_value)
    {

    }

    public String saySomething(boolean isBadBoy)
    {
        // TODO: Exchange the default return implementation for "saySomething" !!!
        // NOTE: Default initialized polymorphic structs can cause problems
        // because of missing default initialization of primitive types of
        // some C++ compilers or different Any initialization in Java and C++
        // polymorphic structs.
        return new String();
    }
	public void printSomething () {
		PrintStream out;
		try {
			out = new PrintStream(new File("D:\\Test.txt"));
			out.println("Test");
			out.close();
		} catch (FileNotFoundException e) { 
			e.printStackTrace();
		}

	}

    // com.sun.star.lang.XServiceInfo:
    public String getImplementationName() {
         return m_implementationName;
    }

    public boolean supportsService( String sService ) {
        int len = m_serviceNames.length;

        for( int i=0; i < len; i++) {
            if (sService.equals(m_serviceNames[i]))
                return true;
        }
        return false;
    }

    public String[] getSupportedServiceNames() {
        return m_serviceNames;
    }

}
